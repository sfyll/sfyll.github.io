{"version":3,"file":"js/blog.e3e5065e.js","mappings":"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","sources":["webpack://sfyl-site/./src/views/Blog.vue","webpack://sfyl-site/./src/components/Card.vue","webpack://sfyl-site/./src/components/Card.vue?a3bd","webpack://sfyl-site/./node_modules/date-fns/esm/_lib/assign/index.js","webpack://sfyl-site/./node_modules/date-fns/esm/_lib/setUTCDay/index.js","webpack://sfyl-site/./node_modules/date-fns/esm/_lib/setUTCISODay/index.js","webpack://sfyl-site/./node_modules/date-fns/esm/_lib/setUTCISOWeek/index.js","webpack://sfyl-site/./node_modules/date-fns/esm/_lib/setUTCWeek/index.js","webpack://sfyl-site/./node_modules/date-fns/esm/parse/_lib/parsers/index.js","webpack://sfyl-site/./node_modules/date-fns/esm/parse/index.js","webpack://sfyl-site/./src/views/Blog.vue?2724"],"sourcesContent":["<template>\n    <div>\n        <div class=\"md:mt-16\">\n            <heading class=\"mb-2\">Posts</heading>\n            <section class=\"md:w-full sm:flex md:grid md:grid-flow-cols md:grid-cols-3\">\n                <Card :href=\"`/blog/${post.slug}`\" left v-for=\"(post, index) in posts\" class=\"mr-2\" :key=\"`${post.slug}_${index}`\">\n                    <heading small class=\"concatenation\">{{ post.title }}</heading>\n                    <subheading small>{{ post.summary }}</subheading>\n                    <span class=\"float-right text-xs pt-2\">{{ convertIsoDate(post.created) }}</span>\n                </Card>\n            </section>\n        </div>\n        <span>\n            <br/>\n            <Unicon name=\"arrow-left\" width=\"24\" height=\"24\" :fill=\"iconColor\" v-if=\"meta && 'previous_page' in meta && meta.previous_page !== null\"/>\n            <span class=\"px-2\">Page {{ currentPage }}</span>\n            <Unicon name=\"arrow-right\" width=\"24\" height=\"24\" :fill=\"iconColor\" v-if=\"meta && 'next_page' in meta && meta.next_page !== null\"/>\n        </span>\n    </div>\n</template>\n<style scoped>\n    .md\\:min-h-80 {\n        min-height: 320px;\n    }\n    .concatenation {\n        -ms-word-break: break-all;\n        word-break: break-all;\n\n        /* Non standard for webkit */\n        word-break: break-word;\n\n        -webkit-hyphens: auto;\n        -moz-hyphens: auto;\n        hyphens: auto;\n\n        max-width: 98%;\n    }\n    \n</style>\n<script>\nimport Card from '../components/Card'\nimport { format, parse } from 'date-fns'\nimport { useMeta } from 'vue-meta'\n\nexport default {\n    data() {\n        return {\n            posts: [],\n            currentPage: 1,\n            meta: null\n        }\n    },\n    setup () {\n        useMeta({\n        title: 'The blog section of sfyl',\n        htmlAttrs: { lang: 'en', amp: true },\n        description: \"sfyl's blog, mostly about crypto and finance\",\n        og: {\n            title: \"The blog section of sfyl\",\n            description: \"sfyl's blog, mostly about crypto and finance\",\n            image:\"https://www.sfyl.xyz/favicon.ico\"\n        },\n        twitter: {\n            card: \"summary\",\n            site: \"@SFYLL\"\n        }\n        })\n    },\n    methods: {\n    async listPosts(page) {\n        let domain;\n\n        if (window.location.hostname === \"localhost\") {\n            domain = \"http://localhost:8080\";\n        } else {\n            domain = \"https://www.sfyl.xyz\";\n        }\n\n        const url = `${domain}/blog_post/meta_data.json`;\n        fetch(url)\n                .then(response => response.json())\n                .then(data => {\n                    const postsPerPage = 15;\n                    const totalPosts = data.length;\n                    const totalPages = Math.ceil(totalPosts / postsPerPage);\n                    const startIndex = (page - 1) * postsPerPage;\n                    const endIndex = startIndex + postsPerPage;\n\n                    this.posts = data.slice(startIndex, endIndex);\n                    this.meta = {\n                        count: totalPosts,\n                        next_page: page < totalPages ? page + 1 : null,\n                        previous_page: page > 1 ? page - 1 : null\n                    };\n                })\n                .catch(error => {\n                    console.error(\"Error fetching posts metadata:\", error);\n                });\n    },\n    convertIsoDate(iso_date) {\n        const parsedDate = parse(iso_date, 'yyyy-MM-dd', new Date());\n        return format(parsedDate, 'P');\n    }\n},\n    components: {\n        Card\n    },\n    computed: {\n        iconColor: function() {\n            return this.$store.state.dark ? \"white\" : \"black\"\n        }\n    },\n    created() {\n        this.listPosts(this.currentPage)\n    }\n\n}\n</script>","<template>\n    <a :href=\"href\" class=\"sm:max-w-lg md:max-w-md\">\n        <span :class=\"classList.join(' ')\">\n            <slot></slot>\n        </span>\n    </a>\n</template>\n<style scoped>\n    a {\n        text-decoration: none;\n    }\n    .md\\:min-h-40 {\n        min-height: 160px !important;\n    }\n</style>\n<script>\nexport default {\n    data() {\n        return {\n            classList: ['card', 'shadow-md', 'hover:shadow-xl']\n        }\n    },\n    props: {\n        href: {\n            required: false,\n            type: String\n        },\n        left: {\n            required: false,\n            type: Boolean\n        },\n    },\n    mounted() {\n        if (this.left) {\n            this.classList.push('text-left')\n        }\n    }\n}\n</script>","import { render } from \"./Card.vue?vue&type=template&id=30fbf083&scoped=true\"\nimport script from \"./Card.vue?vue&type=script&lang=js\"\nexport * from \"./Card.vue?vue&type=script&lang=js\"\n\nimport \"./Card.vue?vue&type=style&index=0&id=30fbf083&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-30fbf083\"]])\n\nexport default __exports__","export default function assign(target, dirtyObject) {\n  if (target == null) {\n    throw new TypeError('assign requires that input parameter not be null or undefined');\n  }\n\n  dirtyObject = dirtyObject || {};\n\n  for (var property in dirtyObject) {\n    if (Object.prototype.hasOwnProperty.call(dirtyObject, property)) {\n      target[property] = dirtyObject[property];\n    }\n  }\n\n  return target;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport toInteger from \"../toInteger/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCDay(dirtyDate, dirtyDay, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = toInteger(dirtyDay);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport toInteger from \"../toInteger/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCISODay(dirtyDate, dirtyDay) {\n  requiredArgs(2, arguments);\n  var day = toInteger(dirtyDay);\n\n  if (day % 7 === 0) {\n    day = day - 7;\n  }\n\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport getUTCISOWeek from \"../getUTCISOWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCISOWeek(dirtyDate, dirtyISOWeek) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var isoWeek = toInteger(dirtyISOWeek);\n  var diff = getUTCISOWeek(date) - isoWeek;\n  date.setUTCDate(date.getUTCDate() - diff * 7);\n  return date;\n}","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport getUTCWeek from \"../getUTCWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCWeek(dirtyDate, dirtyWeek, options) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var week = toInteger(dirtyWeek);\n  var diff = getUTCWeek(date, options) - week;\n  date.setUTCDate(date.getUTCDate() - diff * 7);\n  return date;\n}","import getUTCWeekYear from \"../../../_lib/getUTCWeekYear/index.js\";\nimport setUTCDay from \"../../../_lib/setUTCDay/index.js\";\nimport setUTCISODay from \"../../../_lib/setUTCISODay/index.js\";\nimport setUTCISOWeek from \"../../../_lib/setUTCISOWeek/index.js\";\nimport setUTCWeek from \"../../../_lib/setUTCWeek/index.js\";\nimport startOfUTCISOWeek from \"../../../_lib/startOfUTCISOWeek/index.js\";\nimport startOfUTCWeek from \"../../../_lib/startOfUTCWeek/index.js\";\nvar MILLISECONDS_IN_HOUR = 3600000;\nvar MILLISECONDS_IN_MINUTE = 60000;\nvar MILLISECONDS_IN_SECOND = 1000;\nvar numericPatterns = {\n  month: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  date: /^(3[0-1]|[0-2]?\\d)/,\n  // 0 to 31\n  dayOfYear: /^(36[0-6]|3[0-5]\\d|[0-2]?\\d?\\d)/,\n  // 0 to 366\n  week: /^(5[0-3]|[0-4]?\\d)/,\n  // 0 to 53\n  hour23h: /^(2[0-3]|[0-1]?\\d)/,\n  // 0 to 23\n  hour24h: /^(2[0-4]|[0-1]?\\d)/,\n  // 0 to 24\n  hour11h: /^(1[0-1]|0?\\d)/,\n  // 0 to 11\n  hour12h: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  minute: /^[0-5]?\\d/,\n  // 0 to 59\n  second: /^[0-5]?\\d/,\n  // 0 to 59\n  singleDigit: /^\\d/,\n  // 0 to 9\n  twoDigits: /^\\d{1,2}/,\n  // 0 to 99\n  threeDigits: /^\\d{1,3}/,\n  // 0 to 999\n  fourDigits: /^\\d{1,4}/,\n  // 0 to 9999\n  anyDigitsSigned: /^-?\\d+/,\n  singleDigitSigned: /^-?\\d/,\n  // 0 to 9, -0 to -9\n  twoDigitsSigned: /^-?\\d{1,2}/,\n  // 0 to 99, -0 to -99\n  threeDigitsSigned: /^-?\\d{1,3}/,\n  // 0 to 999, -0 to -999\n  fourDigitsSigned: /^-?\\d{1,4}/ // 0 to 9999, -0 to -9999\n\n};\nvar timezonePatterns = {\n  basicOptionalMinutes: /^([+-])(\\d{2})(\\d{2})?|Z/,\n  basic: /^([+-])(\\d{2})(\\d{2})|Z/,\n  basicOptionalSeconds: /^([+-])(\\d{2})(\\d{2})((\\d{2}))?|Z/,\n  extended: /^([+-])(\\d{2}):(\\d{2})|Z/,\n  extendedOptionalSeconds: /^([+-])(\\d{2}):(\\d{2})(:(\\d{2}))?|Z/\n};\n\nfunction parseNumericPattern(pattern, string, valueCallback) {\n  var matchResult = string.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  var value = parseInt(matchResult[0], 10);\n  return {\n    value: valueCallback ? valueCallback(value) : value,\n    rest: string.slice(matchResult[0].length)\n  };\n}\n\nfunction parseTimezonePattern(pattern, string) {\n  var matchResult = string.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  } // Input is 'Z'\n\n\n  if (matchResult[0] === 'Z') {\n    return {\n      value: 0,\n      rest: string.slice(1)\n    };\n  }\n\n  var sign = matchResult[1] === '+' ? 1 : -1;\n  var hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;\n  var minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;\n  var seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;\n  return {\n    value: sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * MILLISECONDS_IN_SECOND),\n    rest: string.slice(matchResult[0].length)\n  };\n}\n\nfunction parseAnyDigitsSigned(string, valueCallback) {\n  return parseNumericPattern(numericPatterns.anyDigitsSigned, string, valueCallback);\n}\n\nfunction parseNDigits(n, string, valueCallback) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigit, string, valueCallback);\n\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigits, string, valueCallback);\n\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigits, string, valueCallback);\n\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigits, string, valueCallback);\n\n    default:\n      return parseNumericPattern(new RegExp('^\\\\d{1,' + n + '}'), string, valueCallback);\n  }\n}\n\nfunction parseNDigitsSigned(n, string, valueCallback) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigitSigned, string, valueCallback);\n\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigitsSigned, string, valueCallback);\n\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigitsSigned, string, valueCallback);\n\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigitsSigned, string, valueCallback);\n\n    default:\n      return parseNumericPattern(new RegExp('^-?\\\\d{1,' + n + '}'), string, valueCallback);\n  }\n}\n\nfunction dayPeriodEnumToHours(enumValue) {\n  switch (enumValue) {\n    case 'morning':\n      return 4;\n\n    case 'evening':\n      return 17;\n\n    case 'pm':\n    case 'noon':\n    case 'afternoon':\n      return 12;\n\n    case 'am':\n    case 'midnight':\n    case 'night':\n    default:\n      return 0;\n  }\n}\n\nfunction normalizeTwoDigitYear(twoDigitYear, currentYear) {\n  var isCommonEra = currentYear > 0; // Absolute number of the current year:\n  // 1 -> 1 AC\n  // 0 -> 1 BC\n  // -1 -> 2 BC\n\n  var absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;\n  var result;\n\n  if (absCurrentYear <= 50) {\n    result = twoDigitYear || 100;\n  } else {\n    var rangeEnd = absCurrentYear + 50;\n    var rangeEndCentury = Math.floor(rangeEnd / 100) * 100;\n    var isPreviousCentury = twoDigitYear >= rangeEnd % 100;\n    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);\n  }\n\n  return isCommonEra ? result : 1 - result;\n}\n\nvar DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nvar DAYS_IN_MONTH_LEAP_YEAR = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]; // User for validation\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |\n * |  p  |                                |  P  |                                |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n */\n\n\nvar parsers = {\n  // Era\n  G: {\n    priority: 140,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // AD, BC\n        case 'G':\n        case 'GG':\n        case 'GGG':\n          return match.era(string, {\n            width: 'abbreviated'\n          }) || match.era(string, {\n            width: 'narrow'\n          });\n        // A, B\n\n        case 'GGGGG':\n          return match.era(string, {\n            width: 'narrow'\n          });\n        // Anno Domini, Before Christ\n\n        case 'GGGG':\n        default:\n          return match.era(string, {\n            width: 'wide'\n          }) || match.era(string, {\n            width: 'abbreviated'\n          }) || match.era(string, {\n            width: 'narrow'\n          });\n      }\n    },\n    set: function (date, flags, value, _options) {\n      flags.era = value;\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['R', 'u', 't', 'T']\n  },\n  // Year\n  y: {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    priority: 130,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'yy'\n        };\n      };\n\n      switch (token) {\n        case 'y':\n          return parseNDigits(4, string, valueCallback);\n\n        case 'yo':\n          return match.ordinalNumber(string, {\n            unit: 'year',\n            valueCallback: valueCallback\n          });\n\n        default:\n          return parseNDigits(token.length, string, valueCallback);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value.isTwoDigitYear || value.year > 0;\n    },\n    set: function (date, flags, value, _options) {\n      var currentYear = date.getUTCFullYear();\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, 1);\n        date.setUTCHours(0, 0, 0, 0);\n        return date;\n      }\n\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'u', 'w', 'I', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local week-numbering year\n  Y: {\n    priority: 130,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'YY'\n        };\n      };\n\n      switch (token) {\n        case 'Y':\n          return parseNDigits(4, string, valueCallback);\n\n        case 'Yo':\n          return match.ordinalNumber(string, {\n            unit: 'year',\n            valueCallback: valueCallback\n          });\n\n        default:\n          return parseNDigits(token.length, string, valueCallback);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value.isTwoDigitYear || value.year > 0;\n    },\n    set: function (date, flags, value, options) {\n      var currentYear = getUTCWeekYear(date, options);\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, options.firstWeekContainsDate);\n        date.setUTCHours(0, 0, 0, 0);\n        return startOfUTCWeek(date, options);\n      }\n\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, options.firstWeekContainsDate);\n      date.setUTCHours(0, 0, 0, 0);\n      return startOfUTCWeek(date, options);\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'Q', 'q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']\n  },\n  // ISO week-numbering year\n  R: {\n    priority: 130,\n    parse: function (string, token, _match, _options) {\n      if (token === 'R') {\n        return parseNDigitsSigned(4, string);\n      }\n\n      return parseNDigitsSigned(token.length, string);\n    },\n    set: function (_date, _flags, value, _options) {\n      var firstWeekOfYear = new Date(0);\n      firstWeekOfYear.setUTCFullYear(value, 0, 4);\n      firstWeekOfYear.setUTCHours(0, 0, 0, 0);\n      return startOfUTCISOWeek(firstWeekOfYear);\n    },\n    incompatibleTokens: ['G', 'y', 'Y', 'u', 'Q', 'q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']\n  },\n  // Extended year\n  u: {\n    priority: 130,\n    parse: function (string, token, _match, _options) {\n      if (token === 'u') {\n        return parseNDigitsSigned(4, string);\n      }\n\n      return parseNDigitsSigned(token.length, string);\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['G', 'y', 'Y', 'R', 'w', 'I', 'i', 'e', 'c', 't', 'T']\n  },\n  // Quarter\n  Q: {\n    priority: 120,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'Q':\n        case 'QQ':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, string);\n        // 1st, 2nd, 3rd, 4th\n\n        case 'Qo':\n          return match.ordinalNumber(string, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n\n        case 'QQQ':\n          return match.quarter(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n        case 'QQQQQ':\n          return match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1st quarter, 2nd quarter, ...\n\n        case 'QQQQ':\n        default:\n          return match.quarter(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 4;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Stand-alone quarter\n  q: {\n    priority: 120,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'q':\n        case 'qq':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, string);\n        // 1st, 2nd, 3rd, 4th\n\n        case 'qo':\n          return match.ordinalNumber(string, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n\n        case 'qqq':\n          return match.quarter(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n        case 'qqqqq':\n          return match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1st quarter, 2nd quarter, ...\n\n        case 'qqqq':\n        default:\n          return match.quarter(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 4;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'Q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Month\n  M: {\n    priority: 110,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        return value - 1;\n      };\n\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'M':\n          return parseNumericPattern(numericPatterns.month, string, valueCallback);\n        // 01, 02, ..., 12\n\n        case 'MM':\n          return parseNDigits(2, string, valueCallback);\n        // 1st, 2nd, ..., 12th\n\n        case 'Mo':\n          return match.ordinalNumber(string, {\n            unit: 'month',\n            valueCallback: valueCallback\n          });\n        // Jan, Feb, ..., Dec\n\n        case 'MMM':\n          return match.month(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // J, F, ..., D\n\n        case 'MMMMM':\n          return match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // January, February, ..., December\n\n        case 'MMMM':\n        default:\n          return match.month(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'L', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Stand-alone month\n  L: {\n    priority: 110,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        return value - 1;\n      };\n\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'L':\n          return parseNumericPattern(numericPatterns.month, string, valueCallback);\n        // 01, 02, ..., 12\n\n        case 'LL':\n          return parseNDigits(2, string, valueCallback);\n        // 1st, 2nd, ..., 12th\n\n        case 'Lo':\n          return match.ordinalNumber(string, {\n            unit: 'month',\n            valueCallback: valueCallback\n          });\n        // Jan, Feb, ..., Dec\n\n        case 'LLL':\n          return match.month(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // J, F, ..., D\n\n        case 'LLLLL':\n          return match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // January, February, ..., December\n\n        case 'LLLL':\n        default:\n          return match.month(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local week of year\n  w: {\n    priority: 100,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'w':\n          return parseNumericPattern(numericPatterns.week, string);\n\n        case 'wo':\n          return match.ordinalNumber(string, {\n            unit: 'week'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 53;\n    },\n    set: function (date, _flags, value, options) {\n      return startOfUTCWeek(setUTCWeek(date, value, options), options);\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']\n  },\n  // ISO week of year\n  I: {\n    priority: 100,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'I':\n          return parseNumericPattern(numericPatterns.week, string);\n\n        case 'Io':\n          return match.ordinalNumber(string, {\n            unit: 'week'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 53;\n    },\n    set: function (date, _flags, value, options) {\n      return startOfUTCISOWeek(setUTCISOWeek(date, value, options), options);\n    },\n    incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']\n  },\n  // Day of the month\n  d: {\n    priority: 90,\n    subPriority: 1,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'd':\n          return parseNumericPattern(numericPatterns.date, string);\n\n        case 'do':\n          return match.ordinalNumber(string, {\n            unit: 'date'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (date, value, _options) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n      var month = date.getUTCMonth();\n\n      if (isLeapYear) {\n        return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];\n      } else {\n        return value >= 1 && value <= DAYS_IN_MONTH[month];\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCDate(value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Day of year\n  D: {\n    priority: 90,\n    subPriority: 1,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'D':\n        case 'DD':\n          return parseNumericPattern(numericPatterns.dayOfYear, string);\n\n        case 'Do':\n          return match.ordinalNumber(string, {\n            unit: 'date'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (date, value, _options) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n\n      if (isLeapYear) {\n        return value >= 1 && value <= 366;\n      } else {\n        return value >= 1 && value <= 365;\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(0, value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'L', 'w', 'I', 'd', 'E', 'i', 'e', 'c', 't', 'T']\n  },\n  // Day of week\n  E: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // Tue\n        case 'E':\n        case 'EE':\n        case 'EEE':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n\n        case 'EEEEE':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n\n        case 'EEEEEE':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n\n        case 'EEEE':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local day of week\n  e: {\n    priority: 90,\n    parse: function (string, token, match, options) {\n      var valueCallback = function (value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n\n      switch (token) {\n        // 3\n        case 'e':\n        case 'ee':\n          // 03\n          return parseNDigits(token.length, string, valueCallback);\n        // 3rd\n\n        case 'eo':\n          return match.ordinalNumber(string, {\n            unit: 'day',\n            valueCallback: valueCallback\n          });\n        // Tue\n\n        case 'eee':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n\n        case 'eeeee':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n\n        case 'eeeeee':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n\n        case 'eeee':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'c', 't', 'T']\n  },\n  // Stand-alone local day of week\n  c: {\n    priority: 90,\n    parse: function (string, token, match, options) {\n      var valueCallback = function (value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n\n      switch (token) {\n        // 3\n        case 'c':\n        case 'cc':\n          // 03\n          return parseNDigits(token.length, string, valueCallback);\n        // 3rd\n\n        case 'co':\n          return match.ordinalNumber(string, {\n            unit: 'day',\n            valueCallback: valueCallback\n          });\n        // Tue\n\n        case 'ccc':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // T\n\n        case 'ccccc':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tu\n\n        case 'cccccc':\n          return match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tuesday\n\n        case 'cccc':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'e', 't', 'T']\n  },\n  // ISO day of week\n  i: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        if (value === 0) {\n          return 7;\n        }\n\n        return value;\n      };\n\n      switch (token) {\n        // 2\n        case 'i':\n        case 'ii':\n          // 02\n          return parseNDigits(token.length, string);\n        // 2nd\n\n        case 'io':\n          return match.ordinalNumber(string, {\n            unit: 'day'\n          });\n        // Tue\n\n        case 'iii':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // T\n\n        case 'iiiii':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // Tu\n\n        case 'iiiiii':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // Tuesday\n\n        case 'iiii':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 7;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCISODay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'E', 'e', 'c', 't', 'T']\n  },\n  // AM or PM\n  a: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'a':\n        case 'aa':\n        case 'aaa':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'aaaaa':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'aaaa':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['b', 'B', 'H', 'k', 't', 'T']\n  },\n  // AM, PM, midnight\n  b: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'b':\n        case 'bb':\n        case 'bbb':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'bbbbb':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'bbbb':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'B', 'H', 'k', 't', 'T']\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'B':\n        case 'BB':\n        case 'BBB':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'BBBBB':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'BBBB':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 't', 'T']\n  },\n  // Hour [1-12]\n  h: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'h':\n          return parseNumericPattern(numericPatterns.hour12h, string);\n\n        case 'ho':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 12;\n    },\n    set: function (date, _flags, value, _options) {\n      var isPM = date.getUTCHours() >= 12;\n\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else if (!isPM && value === 12) {\n        date.setUTCHours(0, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n\n      return date;\n    },\n    incompatibleTokens: ['H', 'K', 'k', 't', 'T']\n  },\n  // Hour [0-23]\n  H: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'H':\n          return parseNumericPattern(numericPatterns.hour23h, string);\n\n        case 'Ho':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 23;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(value, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'K', 'k', 't', 'T']\n  },\n  // Hour [0-11]\n  K: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'K':\n          return parseNumericPattern(numericPatterns.hour11h, string);\n\n        case 'Ko':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      var isPM = date.getUTCHours() >= 12;\n\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n\n      return date;\n    },\n    incompatibleTokens: ['h', 'H', 'k', 't', 'T']\n  },\n  // Hour [1-24]\n  k: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'k':\n          return parseNumericPattern(numericPatterns.hour24h, string);\n\n        case 'ko':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 24;\n    },\n    set: function (date, _flags, value, _options) {\n      var hours = value <= 24 ? value % 24 : value;\n      date.setUTCHours(hours, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'H', 'K', 't', 'T']\n  },\n  // Minute\n  m: {\n    priority: 60,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'm':\n          return parseNumericPattern(numericPatterns.minute, string);\n\n        case 'mo':\n          return match.ordinalNumber(string, {\n            unit: 'minute'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 59;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMinutes(value, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Second\n  s: {\n    priority: 50,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 's':\n          return parseNumericPattern(numericPatterns.second, string);\n\n        case 'so':\n          return match.ordinalNumber(string, {\n            unit: 'second'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 59;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCSeconds(value, 0);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Fraction of second\n  S: {\n    priority: 30,\n    parse: function (string, token, _match, _options) {\n      var valueCallback = function (value) {\n        return Math.floor(value * Math.pow(10, -token.length + 3));\n      };\n\n      return parseNDigits(token.length, string, valueCallback);\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMilliseconds(value);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Timezone (ISO-8601. +00:00 is `'Z'`)\n  X: {\n    priority: 10,\n    parse: function (string, token, _match, _options) {\n      switch (token) {\n        case 'X':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);\n\n        case 'XX':\n          return parseTimezonePattern(timezonePatterns.basic, string);\n\n        case 'XXXX':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);\n\n        case 'XXXXX':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);\n\n        case 'XXX':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, string);\n      }\n    },\n    set: function (date, flags, value, _options) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n\n      return new Date(date.getTime() - value);\n    },\n    incompatibleTokens: ['t', 'T', 'x']\n  },\n  // Timezone (ISO-8601)\n  x: {\n    priority: 10,\n    parse: function (string, token, _match, _options) {\n      switch (token) {\n        case 'x':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);\n\n        case 'xx':\n          return parseTimezonePattern(timezonePatterns.basic, string);\n\n        case 'xxxx':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);\n\n        case 'xxxxx':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);\n\n        case 'xxx':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, string);\n      }\n    },\n    set: function (date, flags, value, _options) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n\n      return new Date(date.getTime() - value);\n    },\n    incompatibleTokens: ['t', 'T', 'X']\n  },\n  // Seconds timestamp\n  t: {\n    priority: 40,\n    parse: function (string, _token, _match, _options) {\n      return parseAnyDigitsSigned(string);\n    },\n    set: function (_date, _flags, value, _options) {\n      return [new Date(value * 1000), {\n        timestampIsSet: true\n      }];\n    },\n    incompatibleTokens: '*'\n  },\n  // Milliseconds timestamp\n  T: {\n    priority: 20,\n    parse: function (string, _token, _match, _options) {\n      return parseAnyDigitsSigned(string);\n    },\n    set: function (_date, _flags, value, _options) {\n      return [new Date(value), {\n        timestampIsSet: true\n      }];\n    },\n    incompatibleTokens: '*'\n  }\n};\nexport default parsers;","import defaultLocale from \"../locale/en-US/index.js\";\nimport subMilliseconds from \"../subMilliseconds/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport assign from \"../_lib/assign/index.js\";\nimport longFormatters from \"../_lib/format/longFormatters/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from \"../_lib/protectedTokens/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport parsers from \"./_lib/parsers/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar TIMEZONE_UNIT_PRIORITY = 10; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar notWhitespaceRegExp = /\\S/;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name parse\n * @category Common Helpers\n * @summary Parse the date.\n *\n * @description\n * Return the date parsed from string using the given format string.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters in the format string wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the format string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 5 below the table).\n *\n * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited\n * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:\n *\n * ```javascript\n * parse('23 AM', 'HH a', new Date())\n * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time\n * ```\n *\n * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true\n *\n * Accepted format string patterns:\n * | Unit                            |Prior| Pattern | Result examples                   | Notes |\n * |---------------------------------|-----|---------|-----------------------------------|-------|\n * | Era                             | 140 | G..GGG  | AD, BC                            |       |\n * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 |     | GGGGG   | A, B                              |       |\n * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |\n * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |\n * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |\n * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |\n * |                                 |     | yyyyy   | ...                               | 2,4   |\n * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |\n * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |\n * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |\n * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |\n * |                                 |     | YYYYY   | ...                               | 2,4   |\n * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |\n * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |\n * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |\n * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |\n * |                                 |     | RRRRR   | ...                               | 2,4,5 |\n * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |\n * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |\n * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |\n * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |\n * |                                 |     | uuuuu   | ...                               | 2,4   |\n * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |\n * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | QQ      | 01, 02, 03, 04                    |       |\n * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |\n * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | qq      | 01, 02, 03, 04                    |       |\n * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |\n * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |\n * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | MM      | 01, 02, ..., 12                   |       |\n * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | MMMM    | January, February, ..., December  | 2     |\n * |                                 |     | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |\n * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | LL      | 01, 02, ..., 12                   |       |\n * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | LLLL    | January, February, ..., December  | 2     |\n * |                                 |     | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |\n * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |\n * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | II      | 01, 02, ..., 53                   | 5     |\n * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |\n * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |\n * |                                 |     | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |\n * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |\n * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |\n * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 |     | DDDD    | ...                               | 2     |\n * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |\n * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |\n * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |\n * |                                 |     | iii     | Mon, Tue, Wed, ..., Sun           | 5     |\n * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |\n * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |\n * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 5     |\n * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | ee      | 02, 03, ..., 01                   |       |\n * |                                 |     | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | cc      | 02, 03, ..., 01                   |       |\n * |                                 |     | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |\n * |                                 |     | aaaa    | a.m., p.m.                        | 2     |\n * |                                 |     | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 |     | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |\n * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 |     | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |\n * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |\n * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |\n * |                                 |     | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |\n * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |\n * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | mm      | 00, 01, ..., 59                   |       |\n * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |\n * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | ss      | 00, 01, ..., 59                   |       |\n * | Seconds timestamp               |  40 | t       | 512969520                         |       |\n * |                                 |     | tt      | ...                               | 2     |\n * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |\n * |                                 |     | SS      | 00, 01, ..., 99                   |       |\n * |                                 |     | SSS     | 000, 001, ..., 999                |       |\n * |                                 |     | SSSS    | ...                               | 2     |\n * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |\n * |                                 |     | TT      | ...                               | 2     |\n * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |\n * |                                 |     | XX      | -0800, +0530, Z                   |       |\n * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |\n * |                                 |     | xx      | -0800, +0530, +0000               |       |\n * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |\n * |                                 |     | PP      | May 29, 1453                      |       |\n * |                                 |     | PPP     | May 29th, 1453                    |       |\n * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |\n * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |\n * |                                 |     | pp      | 12:00:00 AM                       |       |\n * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |\n * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |\n * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |\n * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular.\n *    In `format` function, they will produce different result:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n *    `parse` will try to match both formatting and stand-alone units interchangably.\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table:\n *    - for numerical units (`yyyyyyyy`) `parse` will try to match a number\n *      as wide as the sequence\n *    - for text units (`MMMMMMMM`) `parse` will try to match the widest variation of the unit.\n *      These variations are marked with \"2\" in the last column of the table.\n *\n * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 4. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` will try to guess the century of two digit year by proximity with `referenceDate`:\n *\n *    `parse('50', 'yy', new Date(2018, 0, 1)) //=> Sat Jan 01 2050 00:00:00`\n *\n *    `parse('75', 'yy', new Date(2018, 0, 1)) //=> Wed Jan 01 1975 00:00:00`\n *\n *    while `uu` will just assign the year as is:\n *\n *    `parse('50', 'uu', new Date(2018, 0, 1)) //=> Sat Jan 01 0050 00:00:00`\n *\n *    `parse('75', 'uu', new Date(2018, 0, 1)) //=> Tue Jan 01 0075 00:00:00`\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [setISOWeekYear]{@link https://date-fns.org/docs/setISOWeekYear}\n *    and [setWeekYear]{@link https://date-fns.org/docs/setWeekYear}).\n *\n * 5. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 7. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based\n *    on the given locale.\n *\n *    using `en-US` locale: `P` => `MM/dd/yyyy`\n *    using `en-US` locale: `p` => `hh:mm a`\n *    using `pt-BR` locale: `P` => `dd/MM/yyyy`\n *    using `pt-BR` locale: `p` => `HH:mm`\n *\n * Values will be assigned to the date in the descending order of its unit's priority.\n * Units of an equal priority overwrite each other in the order of appearance.\n *\n * If no values of higher priority are parsed (e.g. when parsing string 'January 1st' without a year),\n * the values will be taken from 3rd argument `referenceDate` which works as a context of parsing.\n *\n * `referenceDate` must be passed for correct work of the function.\n * If you're not sure which `referenceDate` to supply, create a new instance of Date:\n * `parse('02/11/2014', 'MM/dd/yyyy', new Date())`\n * In this case parsing will be done in the context of the current date.\n * If `referenceDate` is `Invalid Date` or a value not convertible to valid `Date`,\n * then `Invalid Date` will be returned.\n *\n * The result may vary by locale.\n *\n * If `formatString` matches with `dateString` but does not provides tokens, `referenceDate` will be returned.\n *\n * If parsing failed, `Invalid Date` will be returned.\n * Invalid Date is a Date, whose time value is NaN.\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Old `parse` was renamed to `toDate`.\n *   Now `parse` is a new function which parses a string using a provided format.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   parse('2016-01-01')\n *\n *   // v2.0.0 onward (toDate no longer accepts a string)\n *   toDate(1392098430000) // Unix to timestamp\n *   toDate(new Date(2014, 1, 11, 11, 30, 30)) // Cloning the date\n *   parse('2016-01-01', 'yyyy-MM-dd', new Date())\n *   ```\n *\n * @param {String} dateString - the string to parse\n * @param {String} formatString - the string of tokens\n * @param {Date|Number} referenceDate - defines values missing from the parsed dateString\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {Date} the parsed date\n * @throws {TypeError} 3 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} `options.locale` must contain `match` property\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Parse 11 February 2014 from middle-endian format:\n * var result = parse('02/11/2014', 'MM/dd/yyyy', new Date())\n * //=> Tue Feb 11 2014 00:00:00\n *\n * @example\n * // Parse 28th of February in Esperanto locale in the context of 2010 year:\n * import eo from 'date-fns/locale/eo'\n * var result = parse('28-a de februaro', \"do 'de' MMMM\", new Date(2010, 0, 1), {\n *   locale: eo\n * })\n * //=> Sun Feb 28 2010 00:00:00\n */\n\nexport default function parse(dirtyDateString, dirtyFormatString, dirtyReferenceDate, dirtyOptions) {\n  requiredArgs(3, arguments);\n  var dateString = String(dirtyDateString);\n  var formatString = String(dirtyFormatString);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.match) {\n    throw new RangeError('locale must contain match property');\n  }\n\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (formatString === '') {\n    if (dateString === '') {\n      return toDate(dirtyReferenceDate);\n    } else {\n      return new Date(NaN);\n    }\n  }\n\n  var subFnOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale\n  }; // If timezone isn't specified, it will be set to the system timezone\n\n  var setters = [{\n    priority: TIMEZONE_UNIT_PRIORITY,\n    subPriority: -1,\n    set: dateToSystemTimezone,\n    index: 0\n  }];\n  var i;\n  var tokens = formatString.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, subFnOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp);\n  var usedTokens = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(token)) {\n      throwProtectedError(token, formatString, dirtyDateString);\n    }\n\n    if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(token)) {\n      throwProtectedError(token, formatString, dirtyDateString);\n    }\n\n    var firstCharacter = token[0];\n    var parser = parsers[firstCharacter];\n\n    if (parser) {\n      var incompatibleTokens = parser.incompatibleTokens;\n\n      if (Array.isArray(incompatibleTokens)) {\n        var incompatibleToken = void 0;\n\n        for (var _i = 0; _i < usedTokens.length; _i++) {\n          var usedToken = usedTokens[_i].token;\n\n          if (incompatibleTokens.indexOf(usedToken) !== -1 || usedToken === firstCharacter) {\n            incompatibleToken = usedTokens[_i];\n            break;\n          }\n        }\n\n        if (incompatibleToken) {\n          throw new RangeError(\"The format string mustn't contain `\".concat(incompatibleToken.fullToken, \"` and `\").concat(token, \"` at the same time\"));\n        }\n      } else if (parser.incompatibleTokens === '*' && usedTokens.length) {\n        throw new RangeError(\"The format string mustn't contain `\".concat(token, \"` and any other token at the same time\"));\n      }\n\n      usedTokens.push({\n        token: firstCharacter,\n        fullToken: token\n      });\n      var parseResult = parser.parse(dateString, token, locale.match, subFnOptions);\n\n      if (!parseResult) {\n        return new Date(NaN);\n      }\n\n      setters.push({\n        priority: parser.priority,\n        subPriority: parser.subPriority || 0,\n        set: parser.set,\n        validate: parser.validate,\n        value: parseResult.value,\n        index: setters.length\n      });\n      dateString = parseResult.rest;\n    } else {\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n      } // Replace two single quote characters with one single quote character\n\n\n      if (token === \"''\") {\n        token = \"'\";\n      } else if (firstCharacter === \"'\") {\n        token = cleanEscapedString(token);\n      } // Cut token from string, or, if string doesn't match the token, return Invalid Date\n\n\n      if (dateString.indexOf(token) === 0) {\n        dateString = dateString.slice(token.length);\n      } else {\n        return new Date(NaN);\n      }\n    }\n  } // Check if the remaining input contains something other than whitespace\n\n\n  if (dateString.length > 0 && notWhitespaceRegExp.test(dateString)) {\n    return new Date(NaN);\n  }\n\n  var uniquePrioritySetters = setters.map(function (setter) {\n    return setter.priority;\n  }).sort(function (a, b) {\n    return b - a;\n  }).filter(function (priority, index, array) {\n    return array.indexOf(priority) === index;\n  }).map(function (priority) {\n    return setters.filter(function (setter) {\n      return setter.priority === priority;\n    }).sort(function (a, b) {\n      return b.subPriority - a.subPriority;\n    });\n  }).map(function (setterArray) {\n    return setterArray[0];\n  });\n  var date = toDate(dirtyReferenceDate);\n\n  if (isNaN(date)) {\n    return new Date(NaN);\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/37\n\n\n  var utcDate = subMilliseconds(date, getTimezoneOffsetInMilliseconds(date));\n  var flags = {};\n\n  for (i = 0; i < uniquePrioritySetters.length; i++) {\n    var setter = uniquePrioritySetters[i];\n\n    if (setter.validate && !setter.validate(utcDate, setter.value, subFnOptions)) {\n      return new Date(NaN);\n    }\n\n    var result = setter.set(utcDate, flags, setter.value, subFnOptions); // Result is tuple (date, flags)\n\n    if (result[0]) {\n      utcDate = result[0];\n      assign(flags, result[1]); // Result is date\n    } else {\n      utcDate = result;\n    }\n  }\n\n  return utcDate;\n}\n\nfunction dateToSystemTimezone(date, flags) {\n  if (flags.timestampIsSet) {\n    return date;\n  }\n\n  var convertedDate = new Date(0);\n  convertedDate.setFullYear(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate());\n  convertedDate.setHours(date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());\n  return convertedDate;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","import { render } from \"./Blog.vue?vue&type=template&id=5edb4b02&scoped=true\"\nimport script from \"./Blog.vue?vue&type=script&lang=js\"\nexport * from \"./Blog.vue?vue&type=script&lang=js\"\n\nimport \"./Blog.vue?vue&type=style&index=0&id=5edb4b02&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5edb4b02\"]])\n\nexport default __exports__"],"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_createVNode","_component_heading","_hoisted_3","_Fragment","_renderList","$data","posts","post","index","_createBlock","_component_Card","href","slug","left","key","small","title","_component_subheading","summary","_hoisted_4","_toDisplayString","$options","convertIsoDate","created","_hoisted_5","meta","previous_page","_component_Unicon","name","width","height","fill","iconColor","_hoisted_6","currentPage","next_page","$props","_normalizeClass","classList","join","_renderSlot","_ctx","$slots","undefined","data","props","required","type","String","Boolean","mounted","this","push","__exports__","assign","target","dirtyObject","TypeError","property","Object","prototype","hasOwnProperty","call","setUTCDay","dirtyDate","dirtyDay","dirtyOptions","requiredArgs","arguments","options","locale","localeWeekStartsOn","weekStartsOn","defaultWeekStartsOn","toInteger","RangeError","date","toDate","day","currentDay","getUTCDay","remainder","dayIndex","diff","setUTCDate","getUTCDate","setUTCISODay","setUTCISOWeek","dirtyISOWeek","isoWeek","getUTCISOWeek","setUTCWeek","dirtyWeek","week","getUTCWeek","MILLISECONDS_IN_HOUR","MILLISECONDS_IN_MINUTE","MILLISECONDS_IN_SECOND","numericPatterns","month","dayOfYear","hour23h","hour24h","hour11h","hour12h","minute","second","singleDigit","twoDigits","threeDigits","fourDigits","anyDigitsSigned","singleDigitSigned","twoDigitsSigned","threeDigitsSigned","fourDigitsSigned","timezonePatterns","basicOptionalMinutes","basic","basicOptionalSeconds","extended","extendedOptionalSeconds","parseNumericPattern","pattern","string","valueCallback","matchResult","match","value","parseInt","rest","slice","length","parseTimezonePattern","sign","hours","minutes","seconds","parseAnyDigitsSigned","parseNDigits","n","RegExp","parseNDigitsSigned","dayPeriodEnumToHours","enumValue","normalizeTwoDigitYear","twoDigitYear","currentYear","result","isCommonEra","absCurrentYear","rangeEnd","rangeEndCentury","Math","floor","isPreviousCentury","DAYS_IN_MONTH","DAYS_IN_MONTH_LEAP_YEAR","isLeapYearIndex","year","parsers","G","priority","parse","token","_options","era","set","flags","setUTCFullYear","setUTCHours","incompatibleTokens","y","isTwoDigitYear","ordinalNumber","unit","validate","_date","getUTCFullYear","normalizedTwoDigitYear","Y","getUTCWeekYear","firstWeekContainsDate","startOfUTCWeek","R","_match","_flags","firstWeekOfYear","Date","startOfUTCISOWeek","u","Q","quarter","context","setUTCMonth","q","M","L","w","I","d","subPriority","isLeapYear","getUTCMonth","D","E","e","wholeWeekDays","c","i","a","dayPeriod","b","B","h","isPM","getUTCHours","H","K","k","m","setUTCMinutes","s","setUTCSeconds","S","pow","setUTCMilliseconds","X","timestampIsSet","getTime","x","t","_token","T","TIMEZONE_UNIT_PRIORITY","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","notWhitespaceRegExp","unescapedLatinCharacterRegExp","dirtyDateString","dirtyFormatString","dirtyReferenceDate","dateString","formatString","defaultLocale","localeFirstWeekContainsDate","defaultFirstWeekContainsDate","NaN","subFnOptions","setters","dateToSystemTimezone","tokens","map","substring","firstCharacter","longFormatter","longFormatters","formatLong","usedTokens","useAdditionalWeekYearTokens","isProtectedWeekYearToken","throwProtectedError","useAdditionalDayOfYearTokens","isProtectedDayOfYearToken","parser","Array","isArray","incompatibleToken","_i","usedToken","indexOf","concat","fullToken","parseResult","cleanEscapedString","test","uniquePrioritySetters","setter","sort","filter","array","setterArray","isNaN","utcDate","subMilliseconds","getTimezoneOffsetInMilliseconds","convertedDate","setFullYear","setHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","input","replace","setup","useMeta","htmlAttrs","lang","amp","description","og","image","twitter","card","site","methods","async","page","domain","window","location","hostname","url","fetch","then","response","json","postsPerPage","totalPosts","totalPages","ceil","startIndex","endIndex","count","catch","error","console","iso_date","parsedDate","format","components","Card","computed","$store","state","dark","listPosts","render"],"sourceRoot":""}